'use strict';

/* 
1. Объясните почему код даёт именно такие результаты?
*/

//пример 1
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // ответ: 2
/* 
У нас префиксный инкремент.
Сначала возвращается значение, где
префиксный инкремент увеличивает число в переменной a на единицу.
Затем переменная c берет значение измененной переменной a.
*/

//пример 2
d = b++;
alert(d); //ответ: 1
/* 
У нас постфиксный инкремент.
Сначала возвращается значение, где b = 1,
Затем переменная d берет значение переменной b.
Затем постфиксный инкремент увеличивает число в переменной b на единицу.
*/

//пример 3
c = 2 + ++a;
alert(c); //ответ: 5
/* 
У нас префиксный инкремент. Приоритет выше, чем у сложения.
Сначала возвращается значение, где
префиксный инкремент увеличивает число в переменной a на единицу.
Затем в переменную c идет сложение 2 и измененного значения a.
*/

//пример 4
d = 2 + b++;
alert(d); //ответ: 4
/* 
У нас постфиксный инкремент. Приоритет выше, чем у сложения, НО сначала возвращает текущее значение.
Сначала возвращается значение, где b = 2 (результат после нашего первого инкремента),
Затем переменная d берет значение переменной b.
Затем постфиксный инкремент увеличивает число в переменной b на единицу.
*/

alert(a); //3
alert(b); //3
/* 
В результате всех действий с инкрементом у нас все это время
менялось значение переменных a и b, делали мы это 2 раза,
соответственно и значения a и b увеличились на 2.
*/