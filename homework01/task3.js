/*
3. Вывести в консоль значения выражений и объяснить почему получились такие значения,
используя комментарии к каждому выражению:
*/

'use strict';
let result1 = 10 + 10 + "10";
console.log(result1);
/*
1. Складываем первые 2 десятки, получаем число 20.
2. Неявно меняется тип, т.к. вторым значением стоит строка, 
и в JavaScript оператор сложения со строками подразумевает всегда конкатинацию.
3. Конкатинируем число 20 переведенное в строку со строкой "10", т.е. "20" + "10" получаем строку "2010".
4. С помощью console.log выводим строку "2010".
*/

let result2 = 10 + "10" + 10;
console.log(result2);
/*
1. Сложение числа 10 и строки "10" преобразуется в конкатинацию строк "10" и "10". Получаем "1010".
2. Сложение строки "1010" и числа 10 преобразуется в конкатинацию "1010" и "10", получаем "101010".
3. С помощью console.log выводим строку "101010".
*/

let result3 = 10 + 10 + +"10";
console.log(result3);
/*
1. Есть унарный плюс (второй плюс при второй операции), для него последняя строка с десяткой является операндом,
в результате чего содержимое строки становится числом.
2. Затем происходят все сложения.
3. Поэтому все 10ки - числа и итог - число 30.
4. С помощью console.log выводим число 30.
*/

let result4 = 10 / -"";
console.log(result4);
/*
1. В JavaScript  пустая строка преобразуется в 0.
2. При делении 10 на -0 получается отрицательная бесконечность.
3. С помощью console.log выводим число -Infinity.
*/

let result5 = 10 / +"2,5";
console.log(result5);
/*
1. Пытаемся применить унарный плюс к строке с числом с плавающей запятой.
2. Не удается преобразовать строку в число, т.к. разделить - запятая, а не точка. Получаем NaN
3. При делении 10 на NaN получаем NaN.
4. C помощью console.log выводим NaN.
*/
